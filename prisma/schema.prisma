model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  firstName   String
  lastName    String
  password    String
  role        Role          @default(USER)
  isBlocked   Boolean       @default(false)
  BankAccount BankAccount[]
}

model BankAccount {
  id                   Int           @id @default(autoincrement())
  accountNumber        String        @unique @db.VarChar(16)
  balance              Float         @default(0)
  currency             Currency      @default(UAH)
  isBlocked            Boolean       @default(false)
  userId               Int
  user                 User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  sentTransactions     Transaction[] @relation("SourceAccount")
  receivedTransactions Transaction[] @relation("DestinationAccount")
}

model Transaction {
  id                Int             @id @default(autoincrement())
  amount            Float
  currency          Currency
  transactionType   TransactionType
  convertedAmount   Float?
  convertedCurrency Currency?

  sourceAccountId      Int?
  destinationAccountId Int

  sourceAccount      BankAccount? @relation("SourceAccount", fields: [sourceAccountId], references: [id], onDelete: Cascade)
  destinationAccount BankAccount  @relation("DestinationAccount", fields: [destinationAccountId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

enum Currency {
  UAH
  USD
  EUR
}

enum TransactionType {
  TRANSFER
  WITHDRAW
  DEPOSIT
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
